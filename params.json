{"name":"Omniauth-lti-example","tagline":"Example App for omniauth-lti gem","body":"OmniAuth LTI Example Application\r\n================================\r\n\r\nThis web application is a basic web application for demoing the use of the [omniauth-lti][] gem. \r\n\r\nThere is a live example in http://omniauth-lti-example.herokuapp.com\r\n\r\nInstallation\r\n============\r\n\r\nClone this repository and set up the database with `rake db:migrate`.\r\n\r\nSet up a tool\\_provider in your LTI consumer with:\r\n\r\n* `/auth/lti/callback` as the launch_url (f.i.: http://omniauth-lti-example.herokuapp.com/auth/lti/callback)\r\n* `test` as the key\r\n* `secret` as the secret\r\n\r\nHow to add Omniauth-LTI\r\n=======================\r\n\r\nThe steps done in this application for authenticating using [omniauth-lti][] are:\r\n\r\n1. Add the gem\r\n--------------\r\n\r\nAdd the [omniauth-lti][] gem in you Gemfile:\r\n\r\n\tgem 'omniauth-lti'\r\n\t\r\nRun bundle install for downloading and installing the gem:\r\n\r\n\tbundle install --without production\r\n\t\r\n2. Set up\r\n---------\r\n\r\nEdit (or create) an initializer `config/initializers/omniauth.rb`, adding the lti omniauth strategy:\r\n\r\n\tRails.application.config.middleware.use OmniAuth::Builder do\r\n\t  provider :lti, :oauth_credentials => LTI_CREDENTIALS_HASH\r\n\tend\r\n\t\r\nCreate `config/initializers/lti.rb`, enabling Oauth 1.0 support:\r\n\r\n\t# You also need to explicitly enable OAuth 1 support in the environment.rb or an initializer:\r\n\tOAUTH_10_SUPPORT = true\r\n\t\r\nIf the credentials of your tool consumers are static, add them here too:\r\n\r\n\t# Tool consumer credentials\r\n\tLTI_CREDENTIALS_HASH = {:test => 'secret'}\r\n\r\nSet up the omniauth route, if not set up yet. Edit your `config/routes.rb`, adding the line:\r\n\t\r\n\t# set the route for omniauth\r\n\tpost '/auth/:provider/callback', to: 'sessions#create'\r\n\t\r\n*Note* that the HTTP method for the route is POST.\r\n*Note* that there is no request phase in this authentication mechanism. That is because LTI spec defines the \r\nauthentication from the LTI consumer to the LTI provider (this webapp).\r\n\r\n3. Include Module\r\n-----------------\r\n\r\nInclude `Omniauth::Lti::Context` in your `application_controller.rb`:\r\n\r\n\tclass ApplicationController < ActionController::Base\r\n\t  ...\r\n\r\n\t  # Include LTI context for accessing it in our views and actions\r\n\t  include Omniauth::Lti::Context\r\n\r\n\t  ...\r\n\tend\r\n\r\n4. Save and use the context\r\n---------------------------\r\n\r\nIf you want to use the LTI context in your application, first you'll have to save it. \r\nCall `save_lti_contex`t when you are creating the sessions (typically in `SessionsController\\#create` in a normal Omniauth application)\r\n\r\nThe context is saved for use anywhere in your application, just call\r\n\r\n\tlti_tool_provider\r\n\t\r\nfor retriving it. For instance, in `app/views/user/show.html.haml`:\r\n\r\n\t%p\r\n\t\tThis application has been launched from \r\n\t\t%code\r\n\t\t\t=lti_tool_provider.resource_link_title\r\n\t\t\t(\r\n\t\t\t=lti_tool_provider.resource_link_id\r\n\t\t\t)\r\n\t%p\r\n\t\tThe key used for the tool_provider is\r\n\t\t%code=lti_tool_provider.consumer_key\r\n\t\tand the secret is\r\n\t\t%code=lti_tool_provider.consumer_secret\t\r\n\r\n*Get the secret* In order to get the consumer\\_secret, needed for making outcome calls, you'll have to pass \r\nto the LTI context a hash of tool\\_consumer credentials, where the key is the consumer\\_key and the value is the consumer\\_secret.\r\n\r\nTo pass this hash you'll have to call `lti_credentials=` in your controller, as below:\r\n\r\n\tclass UserController < ApplicationController\r\n\t  before_filter :set_lti_credentials\r\n  \r\n      ... \r\n\r\n\t  private \r\n  \r\n\t  # set tool consumer credentials in LTI context\r\n\t  def set_lti_credentials\r\n\t    self.lti_credentials = LTI_CREDENTIALS_HASH\r\n\t  end\r\n\tend\r\n\r\n\r\n[omniauth-lti]: https://github.com/xaviaracil/omniauth-lti","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}